[{"C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\index.js":"1","C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\App.js":"2","C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\SelectVillages.js":"3","C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\NewVillage.js":"4","C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\ShowVillage.js":"5"},{"size":208,"mtime":1608551637449,"results":"6","hashOfConfig":"7"},{"size":342,"mtime":1608638921290,"results":"8","hashOfConfig":"7"},{"size":1750,"mtime":1608648304576,"results":"9","hashOfConfig":"7"},{"size":3674,"mtime":1608648304564,"results":"10","hashOfConfig":"7"},{"size":355,"mtime":1608586218713,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"a50ybc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\index.js",[],["24","25"],"C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\App.js",[],"C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\SelectVillages.js",[],"C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\NewVillage.js",["26","27"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst NewVillage =({village}) => {\r\n\r\n    //Hooks states pour le formulaire et la fonction show/hide\r\n    const [formData, updateFormData] = React.useState([]);\r\n    const [showingState, setShowingState] = React.useState();\r\n\r\n\r\n    //Sauvegarde des données du formulaire\r\n    const handleChange = (event) => {\r\n        updateFormData({\r\n            ...formData,\r\n\r\n            [event.target.name]: event.target.value.trim()\r\n        });\r\n    };\r\n\r\n    //Fonctions CRUD\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        axios.post('http://localhost:8080/Village', formData)\r\n    };\r\n\r\n    const handleUpdate = (event) => {\r\n        event.preventDefault()\r\n        axios.put('http://localhost:8080/Village', formData)\r\n    };\r\n\r\n    const handleDelete = (event) => {\r\n        event.preventDefault()\r\n        axios.delete('http://localhost:8080/Village/' + village.id)\r\n    };\r\n\r\n    /*   useEffect(() => {\r\n           const village = { name: 'Village POST REACT',\r\n               postCode: 44300};\r\n           axios.post('http://localhost:8080/Village', village)\r\n           // .then(response => setArticleId(response.data.id));\r\n       }, []);*/\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/*Boutons RADIO pour l'affichage/masquage des forms/boutons*/}\r\n            <div>\r\n                <input id='toggle add' name='choix' type='radio' value='toggle add' checked onClick={() => setShowingState(\"add\")}/>\r\n                <label htmlFor=\"toggle add \">\r\n                    Add\r\n                </label>\r\n                <input id='toggle update' name='choix' type='radio' value='toggle update'\r\n                       onClick={() => setShowingState(\"update\")}/>\r\n                <label htmlFor=\"toggle add \">\r\n                    Update\r\n                </label>\r\n                <input id='toggle delete' name='choix' type='radio' value='toggle delete'\r\n                       onClick={() => setShowingState(\"delete\")}/>\r\n                <label htmlFor=\"toggle delete \">\r\n                    delete\r\n                </label>\r\n            </div>\r\n\r\n\r\n            {/*Les actions sur forms sont gérées par \"onChange\" qui appelle la fonction \"handleChange()\"*/}\r\n            {showingState === \"delete\" || showingState === \"add\" ? null :\r\n                <label>\r\n                    Id (uniquement pour UPDATE/DELETE)\r\n                    <input name=\"id\" onChange={handleChange}/>\r\n                </label>\r\n            }\r\n\r\n            {showingState === \"delete\" ? null :\r\n                <label>\r\n                    Village\r\n                    <input name=\"name\" onChange={handleChange}/>\r\n                </label>\r\n            }\r\n\r\n            <br/>\r\n\r\n            {showingState === \"delete\" ? null :\r\n                <label>\r\n                    Code Postal\r\n                    <input name=\"postCode\" type=\"number\" onChange={handleChange}/>\r\n                </label>\r\n            }\r\n\r\n            <br/>\r\n\r\n\r\n            {/*Boutons qui lancent les fonctions CRUD au clique*/}\r\n            {showingState === \"delete\" || showingState === \"update\" ? null :\r\n                <button onClick={handleSubmit}>Ajouter</button>\r\n            }\r\n\r\n            {showingState === \"delete\" ||showingState === \"add\" ? null :\r\n                <button onClick={handleUpdate}>Update</button>\r\n            }\r\n\r\n            {showingState === \"update\" || showingState === \"add\" ? null :\r\n\r\n                <button onClick={handleDelete}>Delete</button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport  default NewVillage;","C:\\Users\\utilisateur\\Desktop\\Simplon\\Projets\\Challenge\\front\\src\\Components\\ShowVillage.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":16,"nodeType":"34","messageId":"35","endLine":1,"endColumn":24},{"ruleId":"32","severity":1,"message":"36","line":1,"column":26,"nodeType":"34","messageId":"35","endLine":1,"endColumn":35},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]